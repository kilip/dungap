---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

tasks:
  default: task -l

  #build:*:
  #  cmds:
  #    - docker build --target {{.target}} -f docker/Dockerfile -t dungap:{{.target}} .
  #    - task: goss
  #      tag: "{{.target}}"
  #  vars:
  #    target: "{{index .MATCH 0}}"

  build:
    cmds:
      - docker compose -f compose.yaml -f compose.override.yaml build {{.CLI_ARGS}}
      - task: goss

  up:
    cmd: docker compose -f compose.yaml -f compose.override.yaml up -d

  up:prod:
    cmd: docker compose -f compose.yaml -f compose.prod.yaml up -d

  stop:
    cmd: docker compose stop

  start:
    cmd: docker compose start

  restart:
    cmds:
      - task: stop
      - task: start

  logs:
    cmd: docker compose logs -f --tail 50

  logs:franken:
    cmd: docker compose exec dungap tail -f /var/log/dungap/caddy.log

  logs:pwa:
    cmd: docker compose exec dungap tail -f /var/log/dungap/pwa.log

  rm:
    cmds:
      - task: stop
      - docker compose rm -f

  shell:
    cmds:
      - docker compose exec dungap bash

  sf:cc:
    cmds:
      - task: .sf
        vars:
          CLI_ARGS: "cache:clear {{.CLI_ARGS}}"

  sf:
    cmds:
      - task: .sf

  .sf:
    cmd: docker compose exec dungap /srv/api/bin/console {{.CLI_ARGS}}

  make:
    desc: Build production image and test it with goss
    cmds:
      - docker build --target production -f docker/Dockerfile -t dungap:production . {{.CLI_ARGS}}
      - task: goss

  goss:
    desc: Verify docker container for production
    cmds:
      - |
        docker run -it --rm \
          --network host \
          --env-file .env.goss \
          --entrypoint dungap-entrypoint \
          -v ./vars/dungap:/var/log/dungap \
          dungap:production
      - |
        dgoss run \
          -v ./vars/dungap:/var/log/dungap \
          --env-file .env.goss \
          dungap:production
    env:
      GOSS_FILE: ./docker/goss.yaml
      GOSS_OPTS: --retry-timeout 30s --sleep 2s --color --format documentation
      GOSS_SLEEP: 2
      GOSS_FILES_STRATEGY: cp
      CONTAINER_LOG_OUTPUT: ./vars/goss.log

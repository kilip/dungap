---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

tasks:
  default: task -l

  build:*:
    cmds:
      - docker build --target {{.target}} -f docker/Dockerfile -t dungap:{{.target}} .
      - task: goss
        tag: "{{.target}}"
    vars:
      target: "{{index .MATCH 0}}"

  up:
    cmd: docker compose up -d

  up:prod:
    cmd: docker compose -f compose.yaml -f compose.prod.yaml up -d

  stop:
    cmd: docker compose stop

  start:
    cmd: docker compose start

  restart:
    cmds:
      - task: stop
      - task: start

  logs:
    cmd: docker compose logs -f --tail 50

  logs:franken:
    cmd: docker compose exec dungap tail -f /var/log/caddy.log

  logs:pwa:
    cmd: docker compose exec dungap tail -f /var/log/pwa.log

  rm:
    cmds:
      - task: stop
      - docker compose rm -f

  shell:
    cmds:
      - docker compose exec dungap bash

  sf:cc:
    cmds:
      - task: .sf
        vars:
          CLI_ARGS: "cache:clear {{.CLI_ARGS}}"

  sf:
    cmds:
      - task: .sf

  .sf:
    cmd: docker compose exec dungap /srv/api/bin/console {{.CLI_ARGS}}

  goss:
    cmds:
      - dgoss run --env-file ./.env.goss dungap:production
    vars:
      tag: production
    env:
      GOSS_FILE: ./docker/goss.yaml
      GOSS_OPTS: --retry-timeout 30s --sleep 2s --color --format documentation
      GOSS_SLEEP: 2
      GOSS_FILES_STRATEGY: cp
      CONTAINER_LOG_OUTPUT: ./vars/goss.log
